FROM balenalib/%%BALENA_MACHINE_NAME%%-debian


RUN "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | tee /etc/apt/sources.list.d/coral-edgetpu.list
RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

RUN apt-get update && apt-get install -y --no-install-recommends \
    bash \
    wget \
    kmod \
    perl \
    cmake \
    build-essential

WORKDIR /usr/src/app

# Set both of these to match your target device to pre-build modules
# Leave at least one of them unset to postpone module building to app start
ARG BALENA_DEVICE_TYPE=%%BALENA_MACHINE_NAME%%
ARG BALENA_HOST_OS_VERSION=2.67.3+rev2

RUN wget -c https://developer.arm.com/-/media/Files/downloads/gnu/11.2-2022.02/binrel/gcc-arm-11.2-2022.02-aarch64-arm-none-eabi.tar.xz -O gcc-arm-11.2-2022.02-aarch64-arm-none-eabi.tar.xz \
            && tar -xf gcc-arm-11.2-2022.02-aarch64-arm-none-eabi.tar.xz && rm -rf gcc-arm-11.2-2022.02-aarch64-arm-none-eabi.tar.xz 


COPY buildmod.sh run.sh mcuxpresso_sdk.tar.gz ./ 
COPY m4ctrl/ m4ctrl
RUN chmod +x ./buildmod.sh && chmod +x ./run.sh
RUN mkdir mcuxpresso_sdk && tar -xzf mcuxpresso_sdk.tar.gz -C mcuxpresso_sdk

RUN ./buildmod.sh

CMD [ "/usr/src/app/run.sh" ]

# set log level for userspace module
ENV LOG_LEVEL "verbose"
